---
import Center from '../../components/Center/Center.astro';
import Pagination from '../../components/Pagination/Pagination.astro';
import StoryCard from '../../components/StoryCard/StoryCard.astro';
import Layout from '../../layouts/Layout.astro';

const { pageNumber: pageNumberParam } = Astro.params;
const pageNumber = parseInt(pageNumberParam) || 1;

import { db, count, Story, Author } from 'astro:db';
const stories = await db.select().from(Story).limit(7).offset((pageNumber - 1) * 6);
const authors = await db.select().from(Author);

const storyCount = await db.select({ count: count() }).from(Story);
const pageCount = Math.ceil(storyCount[0].count / 6);

if (stories.length === 0 && pageNumber > 1) {
    return Astro.redirect('/stories/1');
}

function getDescription (body : string) {
    return body.split(' ').slice(0, 20).join(' ').replace(/\.$/, "") + '...';
}
---

<Layout title={`All Stories - His Stories`}>
    <Center>
        <header class="flex flex-col gap-1">
            <h1 class="text-4xl text-hs-cream-90">All stories</h1>
            <h2 class="text-hs-cream-70">All stories published by users.</h2>
        </header>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {
                stories.map (story => {
                    const author = authors.find(author => author.id === story.authorId);
                    return (
                        <StoryCard
                            title={story.title}
                            author={author.displayName}
                            description={getDescription(story.body)}
                            storyId={story.id}
                            key={story.id}
                        />
                    )
                })
            }
        </div>
        { pageCount > 1 && <Pagination currentPage={ pageNumber } pageCount={ pageCount } /> }
    </Center>
</Layout>