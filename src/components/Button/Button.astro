---
interface Props {
    variant? : "primary" | "ghost" | "secondary";
    href?: string;
    onclick?: string;
    type?: "submit" | "reset" | "button";
}

const { variant = "primary", href, onclick, type = "button" } = Astro.props

function getVariantClassName (variant : Props["variant"]) {
    switch (variant) {
        case "primary": 
            return "bg-hs-red-60 hover:bg-hs-red-70 text-white button-primary";
        case "secondary":
            return "text-hs-red-90 hover:bg-hs-red-80/10";
        case "ghost":
            return "bg-transparent opacity-80 hover:opacity-100 hover:bg-hs-red-80/10 hover:text-hs-red-80";
    }
}

const buttonClassName = `
    ${getVariantClassName (variant)}
    px-3 py-1.5 rounded-md
    transition-all duration-100
`
---

{ href ?
    <a class={buttonClassName} href={ href }><slot /></a>
    : (
        <button type={type} class={buttonClassName} onclick={ onclick }>
            <slot />
        </button>
    )
}

<style>
    .button-primary {
        box-shadow: inset 0px 2px 0px 0px rgba(0,0,0,0.2), inset 0px -2px 0px 0px rgba(255, 255, 255, 0.3);
    }
</style>